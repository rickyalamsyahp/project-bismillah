name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REPO_NAME: pgi-insitrix-frontend
  REPO_TAG: latest
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.REPO_TAG }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:buildcache,mode=max
        
  deployment:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOSTNAME}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.PRIVATE_KEY}}
          port: ${{secrets.PORT}}
          script: |
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}:${{ env.REPO_TAG }}
            sudo docker image ls -a
            sudo docker stop $(sudo docker ps -a -q --filter "name=${{ env.REPO_NAME }}")
            sudo docker rm $(sudo docker ps -a -q --filter "name=${{ env.REPO_NAME }}")
            sudo docker image rm -f $(sudo docker images -f dangling=true -q)
            sudo docker run -d --name ${{ env.REPO_NAME }} --env-file ./env.${{ env.REPO_NAME }} --publish 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.REPO_NAME }}
            sudo docker ps -a
